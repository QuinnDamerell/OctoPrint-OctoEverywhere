# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Proto

import octoflatbuffers
class WebStreamMsg(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = octoflatbuffers.encode.Get(octoflatbuffers.packer.uoffset, buf, offset)
        x = WebStreamMsg()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsWebStreamMsg(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # WebStreamMsg
    def Init(self, buf, pos):
        self._tab = octoflatbuffers.table.Table(buf, pos)

    # WebStreamMsg
    def StreamId(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 0

    # WebStreamMsg
    def IsOpenMsg(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(octoflatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # WebStreamMsg
    def IsCloseMsg(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return bool(self._tab.Get(octoflatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # WebStreamMsg
    def IsDataTransmissionDone(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(octoflatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # WebStreamMsg
    def IsControlFlagsOnly(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(octoflatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return True

    # WebStreamMsg
    def FullStreamDataSize(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return -1

    # WebStreamMsg
    def Data(self, j):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(octoflatbuffers.number_types.Uint8Flags, a + octoflatbuffers.number_types.UOffsetTFlags.py_type(j * 1))
        return 0

    # WebStreamMsg
    def DataAsNumpy(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.GetVectorAsNumpy(octoflatbuffers.number_types.Uint8Flags, o)
        return 0

    # WebStreamMsg
    def DataAsByteArray(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.GetVectorAsByteArray(o)
        return 0

    # WebStreamMsg
    def DataLength(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # WebStreamMsg
    def DataIsNone(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        return o == 0

    # WebStreamMsg
    def DataCompression(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # WebStreamMsg
    def OriginalDataSize(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(20))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # WebStreamMsg
    def HttpInitialContext(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(22))
        if o != 0:
            x = self._tab.Indirect(o + self._tab.Pos)
            from octoeverywhere.Proto.HttpInitialContext import HttpInitialContext
            obj = HttpInitialContext()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # WebStreamMsg
    def IsWebsocketStream(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(24))
        if o != 0:
            return bool(self._tab.Get(octoflatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # WebStreamMsg
    def StatusCode(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(26))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # WebStreamMsg
    def WebsocketDataType(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(28))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 126

    # WebStreamMsg
    def MsgPriority(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(30))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 10

    # WebStreamMsg
    def CloseDueToRequestConnectionFailure(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(32))
        if o != 0:
            return bool(self._tab.Get(octoflatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # WebStreamMsg
    def BodyReadTimeHighWaterMarkMs(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(34))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # WebStreamMsg
    def SocketSendTimeHighWaterMarkMs(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(36))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # WebStreamMsg
    def MultipartReadsPerSecond(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(38))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

def Start(builder): builder.StartObject(18)
def WebStreamMsgStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddStreamId(builder, streamId): builder.PrependUint32Slot(0, streamId, 0)
def WebStreamMsgAddStreamId(builder, streamId):
    """This method is deprecated. Please switch to AddStreamId."""
    return AddStreamId(builder, streamId)
def AddIsOpenMsg(builder, isOpenMsg): builder.PrependBoolSlot(1, isOpenMsg, 0)
def WebStreamMsgAddIsOpenMsg(builder, isOpenMsg):
    """This method is deprecated. Please switch to AddIsOpenMsg."""
    return AddIsOpenMsg(builder, isOpenMsg)
def AddIsCloseMsg(builder, isCloseMsg): builder.PrependBoolSlot(2, isCloseMsg, 0)
def WebStreamMsgAddIsCloseMsg(builder, isCloseMsg):
    """This method is deprecated. Please switch to AddIsCloseMsg."""
    return AddIsCloseMsg(builder, isCloseMsg)
def AddIsDataTransmissionDone(builder, isDataTransmissionDone): builder.PrependBoolSlot(3, isDataTransmissionDone, 0)
def WebStreamMsgAddIsDataTransmissionDone(builder, isDataTransmissionDone):
    """This method is deprecated. Please switch to AddIsDataTransmissionDone."""
    return AddIsDataTransmissionDone(builder, isDataTransmissionDone)
def AddIsControlFlagsOnly(builder, isControlFlagsOnly): builder.PrependBoolSlot(4, isControlFlagsOnly, 1)
def WebStreamMsgAddIsControlFlagsOnly(builder, isControlFlagsOnly):
    """This method is deprecated. Please switch to AddIsControlFlagsOnly."""
    return AddIsControlFlagsOnly(builder, isControlFlagsOnly)
def AddFullStreamDataSize(builder, fullStreamDataSize): builder.PrependInt64Slot(5, fullStreamDataSize, -1)
def WebStreamMsgAddFullStreamDataSize(builder, fullStreamDataSize):
    """This method is deprecated. Please switch to AddFullStreamDataSize."""
    return AddFullStreamDataSize(builder, fullStreamDataSize)
def AddData(builder, data): builder.PrependUOffsetTRelativeSlot(6, octoflatbuffers.number_types.UOffsetTFlags.py_type(data), 0)
def WebStreamMsgAddData(builder, data):
    """This method is deprecated. Please switch to AddData."""
    return AddData(builder, data)
def StartDataVector(builder, numElems): return builder.StartVector(1, numElems, 1)
def WebStreamMsgStartDataVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartDataVector(builder, numElems)
def AddDataCompression(builder, dataCompression): builder.PrependInt8Slot(7, dataCompression, 0)
def WebStreamMsgAddDataCompression(builder, dataCompression):
    """This method is deprecated. Please switch to AddDataCompression."""
    return AddDataCompression(builder, dataCompression)
def AddOriginalDataSize(builder, originalDataSize): builder.PrependUint64Slot(8, originalDataSize, 0)
def WebStreamMsgAddOriginalDataSize(builder, originalDataSize):
    """This method is deprecated. Please switch to AddOriginalDataSize."""
    return AddOriginalDataSize(builder, originalDataSize)
def AddHttpInitialContext(builder, httpInitialContext): builder.PrependUOffsetTRelativeSlot(9, octoflatbuffers.number_types.UOffsetTFlags.py_type(httpInitialContext), 0)
def WebStreamMsgAddHttpInitialContext(builder, httpInitialContext):
    """This method is deprecated. Please switch to AddHttpInitialContext."""
    return AddHttpInitialContext(builder, httpInitialContext)
def AddIsWebsocketStream(builder, isWebsocketStream): builder.PrependBoolSlot(10, isWebsocketStream, 0)
def WebStreamMsgAddIsWebsocketStream(builder, isWebsocketStream):
    """This method is deprecated. Please switch to AddIsWebsocketStream."""
    return AddIsWebsocketStream(builder, isWebsocketStream)
def AddStatusCode(builder, statusCode): builder.PrependUint16Slot(11, statusCode, 0)
def WebStreamMsgAddStatusCode(builder, statusCode):
    """This method is deprecated. Please switch to AddStatusCode."""
    return AddStatusCode(builder, statusCode)
def AddWebsocketDataType(builder, websocketDataType): builder.PrependInt8Slot(12, websocketDataType, 126)
def WebStreamMsgAddWebsocketDataType(builder, websocketDataType):
    """This method is deprecated. Please switch to AddWebsocketDataType."""
    return AddWebsocketDataType(builder, websocketDataType)
def AddMsgPriority(builder, msgPriority): builder.PrependInt8Slot(13, msgPriority, 10)
def WebStreamMsgAddMsgPriority(builder, msgPriority):
    """This method is deprecated. Please switch to AddMsgPriority."""
    return AddMsgPriority(builder, msgPriority)
def AddCloseDueToRequestConnectionFailure(builder, closeDueToRequestConnectionFailure): builder.PrependBoolSlot(14, closeDueToRequestConnectionFailure, 0)
def WebStreamMsgAddCloseDueToRequestConnectionFailure(builder, closeDueToRequestConnectionFailure):
    """This method is deprecated. Please switch to AddCloseDueToRequestConnectionFailure."""
    return AddCloseDueToRequestConnectionFailure(builder, closeDueToRequestConnectionFailure)
def AddBodyReadTimeHighWaterMarkMs(builder, bodyReadTimeHighWaterMarkMs): builder.PrependUint16Slot(15, bodyReadTimeHighWaterMarkMs, 0)
def WebStreamMsgAddBodyReadTimeHighWaterMarkMs(builder, bodyReadTimeHighWaterMarkMs):
    """This method is deprecated. Please switch to AddBodyReadTimeHighWaterMarkMs."""
    return AddBodyReadTimeHighWaterMarkMs(builder, bodyReadTimeHighWaterMarkMs)
def AddSocketSendTimeHighWaterMarkMs(builder, socketSendTimeHighWaterMarkMs): builder.PrependUint16Slot(16, socketSendTimeHighWaterMarkMs, 0)
def WebStreamMsgAddSocketSendTimeHighWaterMarkMs(builder, socketSendTimeHighWaterMarkMs):
    """This method is deprecated. Please switch to AddSocketSendTimeHighWaterMarkMs."""
    return AddSocketSendTimeHighWaterMarkMs(builder, socketSendTimeHighWaterMarkMs)
def AddMultipartReadsPerSecond(builder, multipartReadsPerSecond): builder.PrependUint8Slot(17, multipartReadsPerSecond, 0)
def WebStreamMsgAddMultipartReadsPerSecond(builder, multipartReadsPerSecond):
    """This method is deprecated. Please switch to AddMultipartReadsPerSecond."""
    return AddMultipartReadsPerSecond(builder, multipartReadsPerSecond)
def End(builder): return builder.EndObject()
def WebStreamMsgEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)