# automatically generated by the FlatBuffers compiler, do not modify

# namespace: Proto

import octoflatbuffers
from typing import Any
from typing import Optional
class OctoNotification(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset: int = 0):
        n = octoflatbuffers.encode.Get(octoflatbuffers.packer.uoffset, buf, offset)
        x = OctoNotification()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsOctoNotification(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # OctoNotification
    def Init(self, buf: bytes, pos: int):
        self._tab = octoflatbuffers.table.Table(buf, pos)

    # OctoNotification
    def Title(self) -> Optional[str]:
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # OctoNotification
    def Text(self) -> Optional[str]:
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # OctoNotification
    def Type(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

    # OctoNotification
    def ActionText(self) -> Optional[str]:
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # OctoNotification
    def ActionLink(self) -> Optional[str]:
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # OctoNotification
    def ShowForSec(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.Get(octoflatbuffers.number_types.Uint32Flags, o + self._tab.Pos)
        return 5

    # OctoNotification
    def ShowOnlyIfLoadedFromOe(self):
        o = octoflatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(18))
        if o != 0:
            return bool(self._tab.Get(octoflatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return True

def OctoNotificationStart(builder: octoflatbuffers.Builder):
    builder.StartObject(8)

def Start(builder: octoflatbuffers.Builder):
    OctoNotificationStart(builder)

def OctoNotificationAddTitle(builder: octoflatbuffers.Builder, title: int):
    builder.PrependUOffsetTRelativeSlot(0, octoflatbuffers.number_types.UOffsetTFlags.py_type(title), 0)

def AddTitle(builder: octoflatbuffers.Builder, title: int):
    OctoNotificationAddTitle(builder, title)

def OctoNotificationAddText(builder: octoflatbuffers.Builder, text: int):
    builder.PrependUOffsetTRelativeSlot(1, octoflatbuffers.number_types.UOffsetTFlags.py_type(text), 0)

def AddText(builder: octoflatbuffers.Builder, text: int):
    OctoNotificationAddText(builder, text)

def OctoNotificationAddType(builder: octoflatbuffers.Builder, type: int):
    builder.PrependInt8Slot(2, type, 0)

def AddType(builder: octoflatbuffers.Builder, type: int):
    OctoNotificationAddType(builder, type)

def OctoNotificationAddActionText(builder: octoflatbuffers.Builder, actionText: int):
    builder.PrependUOffsetTRelativeSlot(4, octoflatbuffers.number_types.UOffsetTFlags.py_type(actionText), 0)

def AddActionText(builder: octoflatbuffers.Builder, actionText: int):
    OctoNotificationAddActionText(builder, actionText)

def OctoNotificationAddActionLink(builder: octoflatbuffers.Builder, actionLink: int):
    builder.PrependUOffsetTRelativeSlot(5, octoflatbuffers.number_types.UOffsetTFlags.py_type(actionLink), 0)

def AddActionLink(builder: octoflatbuffers.Builder, actionLink: int):
    OctoNotificationAddActionLink(builder, actionLink)

def OctoNotificationAddShowForSec(builder: octoflatbuffers.Builder, showForSec: int):
    builder.PrependUint32Slot(6, showForSec, 5)

def AddShowForSec(builder: octoflatbuffers.Builder, showForSec: int):
    OctoNotificationAddShowForSec(builder, showForSec)

def OctoNotificationAddShowOnlyIfLoadedFromOe(builder: octoflatbuffers.Builder, showOnlyIfLoadedFromOe: bool):
    builder.PrependBoolSlot(7, showOnlyIfLoadedFromOe, 1)

def AddShowOnlyIfLoadedFromOe(builder: octoflatbuffers.Builder, showOnlyIfLoadedFromOe: bool):
    OctoNotificationAddShowOnlyIfLoadedFromOe(builder, showOnlyIfLoadedFromOe)

def OctoNotificationEnd(builder: octoflatbuffers.Builder) -> int:
    return builder.EndObject()

def End(builder: octoflatbuffers.Builder) -> int:
    return OctoNotificationEnd(builder)
